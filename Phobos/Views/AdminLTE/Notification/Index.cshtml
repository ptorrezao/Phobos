@model IEnumerable<UserNotificationViewModel>
@Html.SetPartialHelper("ButtonsForPager", (Func<HelperResult>)(ButtonsForPager))
@section _ContentHeader {
    <section class="content-header">
        <h1>
            Notifications
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Content("~")"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">Notifications</li>
        </ol>
    </section>
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Notifications</h3>
            </div>

            <div class="box-body no-padding">
                @(Html
                .Grid(Model)
                .Named("notifications")
                .Build(columns =>
                {
                    columns.Add(model => model.Id)
                            .RenderedAs(model => "<input name='selectedIds' type='checkbox' value='" + model.Id.ToString() + "'>")
                            .Css("smallColumn")
                            .Titled("Options")
                            .Encoded(false);
                    columns.Add(model => model.Read)
                        .Css("fiftyColumn")
                        .Encoded(false)
                        .Titled("Read")
                        .RenderedAs(model => model.Read ? "":"<i class='fa fa-newspaper-o' aria-hidden='true'></i>" );
                    columns.Add(model => model.Title)
                            .Css("fiftyColumn")
                            .Encoded(false)
                            .Titled("Title")
                            .RenderedAs(model => model.Read ? model.Title : string.Format("<strong>{0}</strong>", model.Title));
                })
                .Filterable(false)
                .Sortable(false)
                        .Css("table-hover table-striped box-footer no-padding notifications")
                .Pageable(pager =>
                {
                    pager.PagesToDisplay = 0;
                    pager.InitialPage = 1;
                    pager.RowsPerPage = 16;
                })
                )
            </div>
        </div>
    </div>
</div>

@helper ButtonsForPager()
{
    <a class="btn btn-default btn-sm checkbox-toggle masterCheckbox"><i class="fa fa-square-o"></i></a>
    <div class="btn-group">
        <button onclick="return false;" data-toggle="modal" data-target="#modalDelete" class="btn btn-default btn-sm"><i class="fa fa-trash-o"></i></button>
    </div>
}

<div class="modal modal-primary fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Delete Notifications</h4>
            </div>
            <div class="modal-body">
                Do you realy want to delete the selected notifications?
            </div>
            <div class="modal-footer">
                <button type="button" onclick="return false;" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                <button name="remove" id="btnRemove" type="submit" formaction="" class="btn btn-outline">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    var url = "@Url.Action("Remove", "Notification")";
    var finalurl = "@Url.Action("Index", "Notification")";

    $(document).ready(function () {
        $(".masterCheckbox").click(function () {
            $(".masterCheckbox").children("i").toggleClass("fa-square-o");
            $(".masterCheckbox").children("i").toggleClass("fa-check-square-o");
            $(".masterCheckbox").toggleClass("checked");

            if ($(this).hasClass("checked")) {
                $('.notifications').find('input[type=checkbox]').prop('checked', true);
            } else {
                $('.notifications').find('input[type=checkbox]').prop('checked', false);
            }
        });

        $("#btnRemove").click(function () {
            var modelIds = [];
            $.each($('.notifications').find('input[type=checkbox]:checked'), function (index, value) {
                modelIds.push($(value).val());
            });

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    selectedIds: modelIds
                },
                success: function (data) {
                    window.location.replace(finalurl);
                }
            });
        });
    });
</script>