@model MessageMailBoxFolderViewModel
@{
    var pageName = Model.FolderId == 0 ? "Create Folder" : "Edit Folder";
}
@section _ContentHeader {
    <section class="content-header">
        <h1>
            @pageName
            <small>@Model.Name</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Content("~")"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Content("~")"><i class="fa fa-folder-open-o"></i> Folders</a></li>
            <li class="active">Edit Folder</li>
        </ol>
    </section>
}

@section scripts{

}

<div class="row">
    <div class="col-md-3" id="folderBox">
        @Html.Partial("_FolderBox", Model.Folders)
        @*
            Tags is not in place for the moment
            @Html.Partial("_TagsBox", Model.Tags)
        *@
    </div>
    <div class="col-md-9">
        <div class="box box-primary">
            @using (Ajax.BeginForm("EditFolder", "Message", new { }, new AjaxOptions()
                        {
                            UpdateTargetId = "folderBox",
                            OnSuccess = "onSuccess",
                            OnFailure = "onFailure"
                        }))
            {
                <div class="box-header with-border">
                    <h3 class="box-title">@pageName</h3>
                </div>
                <div class="box-body">
                    @Html.HiddenFor(m => m.FolderId)
                    @Html.HiddenFor(m => m.QtdNewMessages)
                    @Html.HiddenFor(m => m.IsEditable)
                    @Html.EditorFor(x => x.User, "UserAccountViewModel_Hidden")
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name)
                        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Folder Name" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Icon)
                        @Html.EditorFor(m => m.Icon, new { htmlAttributes = new { @class = "form-control", @placeholder = "Icon" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.IconColor)
                        @Html.EditorFor(m => m.IconColor, new { htmlAttributes = new { @class = "form-control", @placeholder = "Icon Color" } })
                    </div>
                    <div class="form-group">
                    </div>
                </div>
                <div class="box-footer">
                    <div class="pull-right">
                        <button type="submit" name="submit" value="Save" class="btn btn-primary"><i class="fa fa-floppy-o"></i> Save</button>
                    </div>
                    <button name="submit" id="btnDiscard" value="Discard" onclick="return false;" class="btn btn-default"><i class="fa fa-times"></i> Discard</button>
                </div>
            }
        </div>
    </div>
</div>
<script>
    function onSuccess() { ohSnap('The request was processed with sucess.', { color: 'green' }); }
    function onFailure() { ohSnap('Something went wrong...', { color: 'red' }); }

    $(document).ready(function () {
        var url = "@Url.Action("RemoveFolder", "Message")";
        var finalurl = "@Url.Action("Index", "Message")";

        $("#btnDiscard").click(function () {
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    selectedId: @Model.FolderId,
                },
                success: function (data) {
                    window.location.replace(finalurl);
                }
            });
        });
    });
</script>