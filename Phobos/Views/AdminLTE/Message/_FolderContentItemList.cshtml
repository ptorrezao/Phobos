@using Phobos.Helpers
@using Phobos.Library.Utils
@using Phobos.Utils;

@model MessageMailBoxFolderViewModel

@{Html.BeginForm("Action", "Message", FormMethod.Post);}

@Html.SetPartialHelper("ButtonsForPager", (Func<HelperResult>)(ButtonsForPager))
<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">@Model.Name</h3>
        <div class="box-tools pull-right">
            <div class="has-feedback">
                <input type="text" class="form-control input-sm grid-search" placeholder="Search Mail" name="search">
                <span class="glyphicon glyphicon-search form-control-feedback"></span>
                <button id="searchButton" name="search" type="submit" style="display:none;"></button>
            </div>
        </div>
    </div>

    <div class="box-body no-padding">
        @(Html
        .Grid(Model.Messages)
        .Named("mailbox")
        .Build(columns =>
        {
            columns.Add(model => model.MessageId)
                    .RenderedAs(model => "<input name='selectedIds' type='checkbox' value='" + model.MessageId.ToString() + "'>")
                    .Css("smallColumn")
                    .Encoded(false);
            columns.Add(model => model.IsFavorite)
                    .Encoded(false)
                    .Css("smallColumn")
                    .Filterable(false)
                    .RenderedAs(model => Html.FontAwesome(Url.Action("MarkAsFavorite", "Message", new { Id = model.MessageId, returnUrl = Request.RawUrl }), model.IsFavorite ? "star" : "star-o", TextColor.Yellow));
            columns.Add(model => model.Sender)
                    .Encoded(false)
                    .Filterable(false)
                    .RenderedAs(model => "<a href=" + Url.Action("ReadMessage", new { id = model.MessageId }) + ">" + model.Sender.FullName + "</a>");
            columns.Add(model => model.Title)
                    .Css("fiftyColumn")
                    .Encoded(false)
                    .RenderedAs(model => string.Format("<strong>{0}</strong> - {1}", model.Title, @System.Text.RegularExpressions.Regex.Replace(model.Intro, @"<[^>]*>", String.Empty)));
            columns.Add(model => model.HasAttachment)
                    .Encoded(false)
                    .Filterable(false)
                    .RenderedAs(model => model.HasAttachment ? Html.FontAwesome("paperclip") : MvcHtmlString.Create(""));
            columns.Add(model => model.Date)
                  .Encoded(false)
                  .Filterable(false)
                  .RenderedAs(model => Html.TimeAgo(model.Date));
        })
        .Filterable(false)
        .Sortable(false)
        .Css("hideTh  table-hover table-striped box-footer no-padding mailbox")
        .Pageable(pager =>
        {
            pager.PagesToDisplay = 0;
            pager.InitialPage = 1;
            pager.RowsPerPage = 16;
        })
        )
    </div>
</div>
<div class="modal modal-primary fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Delete Messages</h4>
            </div>
            <div class="modal-body">
                Do you realy want to delete the selected messages?
            </div>
            <div class="modal-footer">
                <button type="button" onclick="return false;" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                <button name="remove" type="submit" class="btn btn-outline">Delete</button>

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modalFolder" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Move Emails to Folder</h4>
            </div>
            <div class="modal-body">
                <label>
                    Which folder do you put the selected emails.
                </label>
                @Html.DropDownListFor(model => model.NewFolderIdForMessages, Model.Folders.AsSelectListItem(Model.FolderId), new { @class = "form-control" })
            </div>
            <div class="modal-footer">
                <button type="button" onclick="return false;" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                <button name="move" type="submit" class="btn btn-primary">Move</button>
            </div>
        </div>
    </div>
</div>
@{
    Html.EndForm();
}

@helper ButtonsForPager()
{
    <a class="btn btn-default btn-sm checkbox-toggle masterCheckbox"><i class="fa fa-square-o"></i></a>
    <div class="btn-group">
        <button onclick="return false;" data-toggle="modal" data-target="#modalDelete" class="btn btn-default btn-sm"><i class="fa fa-trash-o"></i></button>
        <button onclick="return false;" data-toggle="modal" data-target="#modalFolder" type="submit" class="btn btn-default btn-sm"><i class="fa fa-folder-open"></i></button>
    </div>
}

<script>
    $(document).ready(function () {
        $(".masterCheckbox").click(function () {
            $(".masterCheckbox").children("i").toggleClass("fa-square-o");
            $(".masterCheckbox").children("i").toggleClass("fa-check-square-o");
            $(".masterCheckbox").toggleClass("checked");

            if ($(this).hasClass("checked")) {
                $('.mailbox').find('input[type=checkbox]').prop('checked', true);
            } else {
                $('.mailbox').find('input[type=checkbox]').prop('checked', false);
            }
        });
        $(".grid-search").blur(function () {
            $("#searchButton").click();
        });
    });
</script>

<style>
    .smallColumn {
        width:20px;
    }

    .fiftyColumn {
        width:50%;
    }
</style>